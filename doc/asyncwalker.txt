*asyncwalker.txt*                                       Denops scan and walker
=============================================================================
asyncwalker ~

Denops scan and walk files.

=============================================================================
Features ~
                                                        *asyncwalker-features*

asyncwalker is a Vim plugin that walks files.

=============================================================================
Installation ~
                                                    *asyncwalker-installation*

If you use folke/lazy.nvim |https://github.com/folke/lazy.nvim|.

>
	{
	  "yukimemi/asyncwalker.vim",
	  lazy = false,
	  dependencies = {
	    "vim-denops/denops.vim",
	  },
	}
<

If you use yukimemi/dvpm |https://github.com/yukimemi/dvpm|.

>
	dvpm.add({ url: "yukimemi/asyncwalker.vim" });
<

=============================================================================
Requirements ~
                                                    *asyncwalker-requirements*

- [Deno - A modern runtime for JavaScript and TypeScript](https://deno.land/)
- [vim-denops/denops.vim: 🐜 An ecosystem of Vim/Neovim which allows developers to write cross-platform plugins in Deno](https://github.com/vim-denops/denops.vim)

=============================================================================
Usage ~
                                                           *asyncwalker-usage*

No special settings are required.
`:AsyncWalk` and `:AsyncWalkBufferDir` command are available.

=============================================================================
Commands ~
                                                        *asyncwalker-commands*

`:AsyncWalk [--path=path]`                                         *:AsyncWalk*
Walk files and display buffer.
You can filter files by typing.
If --path is not specified, current directory is used.

`:AsyncWalkBufferDir`                                     *:AsyncWalkBufferDir*
Same as `:AsyncWalk --path="%:p:h"`.

:AsyncWalkResume                                             *:AsyncWalkResume*
Resume walk buffer.

=============================================================================
Config ~
                                                          *asyncwalker-config*

No settings are required. However, the following settings can be made if necessary.

`g:asyncwalker_debug`                                     *g:asyncwalker_debug*
Enable debug messages.
default is v:false

`g:asyncwalker_height`                                   *g:asyncwalker_height*
Height of walk buffer.
default is 15

`g:asyncwalker_chunk`                                     *g:asyncwalker_chunk*
Chunk size of walk buffer.
default is 500

`g:asyncwalker_ignore`                                   *g:asyncwalker_ignore*
Ignore patterns.
default is ["\\.git", "\\.svn", "\\.hg", "\\.o$", "\\.obj$", "\\.a$", "\\.exe~?$", "tags$"]

`g:asyncwalker_no_mapping`                           *g:asyncwalker_no_mapping*
Whether to disable default mappings.
default is v:false

=============================================================================
Mappings ~
                                                        *asyncwalker-mappings*

On filter buffer (`asyncwalker-filter`), you can use the following mappings.

`<Plug>(asyncwalker-cursor-down)`             *<Plug>(asyncwalker-cursor-down)*
Cursor move next line. (Default is <C-j>)

`<Plug>(asyncwalker-cursor-up)`                 *<Plug>(asyncwalker-cursor-up)*
Cursor move previous line. (Default is <C-k>)

`<Plug>(asyncwalker-escape)`                       *<Plug>(asyncwalker-escape)*
Escape filter buffer and go to walk buffer. (Default is <ESC>)

`<Plug>(asyncwalker-enter)`                         *<Plug>(asyncwalker-enter)*
Open cursor selected line. (Default is <CR>)

`<Plug>(asyncwalker-quit)`                           *<Plug>(asyncwalker-quit)*
Quit walk and filter buffer. (Default is <ESC>)

`<Plug>(asyncwalker-insert)`                       *<Plug>(asyncwalker-insert)*
Go to filter buffer. (Default is i and a)

=============================================================================
Example ~
                                                               *walk-example*

>
	nnoremap <space>wa <cmd>AsyncWalk<cr>
	nnoremap <space>ws <cmd>AsyncWalk --path=~/src<cr>
	nnoremap <space>wD <cmd>AsyncWalk --path=~/.dotfiles<cr>
	nnoremap <space>wc <cmd>AsyncWalk --path=~/.cache<cr>
	nnoremap <space>wm <cmd>AsyncWalk --path=~/.memolist<cr>
	nnoremap <space>wd <cmd>AsyncWalkBufferDir<cr>
	nnoremap <space>wr <cmd>AsyncWalkResume<cr>
<

=============================================================================
License ~
                                                               *walk-license*

Licensed under MIT License.

Copyright (c) 2023 yukimemi


vim:tw=78:ts=8:noet:ft=help:norl:
